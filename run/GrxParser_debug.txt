Grammar:
 productionStatementBody -> <3> SEMICOLON productionStatementCode(code)    {  v = new ProductionStatementBody(code == null ? null : code.code);  }
                          | <4> ID(s) productionStatementArgument(arg) productionStatementBody(b)    {      if (StringUtils.isTerminal(s.id)) {         if (arg == null) {             b.addTerminal(s.id);         }         else {             b.addTerminal(s.id, arg.id);         }     }     else {         if (arg == null) {             b.addNonTerminal(s.id);         }         else {             b.addNonTerminal(s.id, arg.id);         }     }     v = b;  };
 productionStatementArgument -> <7>     {  v = null;  }
                              | <8> LEFT_PAREN ID(arg) RIGHT_PAREN    {  v = arg;  };
 statement -> <2> ID(nonTerminal) ASSIGN productionStatementBody(body)    {  v = new ProductionStatementNode(nonTerminal.id, body.getProduction(), body.getCode());  }
            | <9> TYPE ID(symbol) ID(type)    {  v = new TypeStatementNode(symbol.id, type.id);  }
            | <10> TOP CODE(c)    {  v = new TopStatementNode(c.code);  }
            | <11> NAME ID(name)    {  v = new NameStatementNode(name.id);  }
            | <12> ALGO algorithm(alg)    {  v = new AlgoStatementNode(alg);  };
 translationUnit -> <0>     {  v = new TranslationUnitNode();  }
                  | <1> translationUnit(t) statement(s)    {  t.addStatement(s); v = t;  };
StranslationUnit' -> <16> translationUnit;
 productionStatementCode -> <5>     {  v = null;  }
                          | <6> CODE(c)    {  v = c;  };
 algorithm -> <13> SLR    {  v = ParsingAlgorithm.SLR;  }
            | <14> CLR    {  v = ParsingAlgorithm.CLR;  }
            | <15> LALR    {  v = ParsingAlgorithm.LALR;  };

First sets:
FIRST(productionStatementBody) = {SEMICOLON, ID}
FIRST(productionStatementArgument) = {, LEFT_PAREN}
FIRST(statement) = {ALGO, TYPE, NAME, TOP, ID}
FIRST(translationUnit) = {ALGO, TYPE, NAME, , TOP, ID}
FIRST(translationUnit') = {ALGO, TYPE, NAME, , TOP, ID}
FIRST(productionStatementCode) = {, CODE}
FIRST(algorithm) = {LALR, SLR, CLR}

Follow sets:
FOLLOW(productionStatementBody) = {ALGO, EOF, TYPE, NAME, TOP, ID}
FOLLOW(productionStatementArgument) = {SEMICOLON, ID}
FOLLOW(statement) = {ALGO, EOF, TYPE, NAME, TOP, ID}
FOLLOW(translationUnit) = {ALGO, EOF, TYPE, NAME, TOP, ID}
FOLLOW(translationUnit') = {EOF}
FOLLOW(productionStatementCode) = {ALGO, EOF, TYPE, NAME, TOP, ID}
FOLLOW(algorithm) = {ALGO, EOF, TYPE, NAME, TOP, ID}

Automation:
Non-terminal count: 6
Terminal count: 14
State count: 27 (0 - 26)

Action table:
STATE | RIGHT_PAREN |         CLR |      ASSIGN |  LEFT_PAREN |        ALGO |        NAME |        CODE |         TOP |   SEMICOLON |         SLR |        LALR |          ID |        TYPE |         EOF
   0  | ----------- | ----------- | ----------- | ----------- |          r0 |          r0 | ----------- |          r0 | ----------- | ----------- | ----------- |          r0 |          r0 |          r0
   1  | ----------- | ----------- | ----------- | ----------- |          s2 |          s4 | ----------- |          s6 | ----------- | ----------- | ----------- |          s7 |          s3 |      accept
   2  | ----------- |         s10 | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |          s9 |          s8 | ----------- | ----------- | -----------
   3  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |         s12 | ----------- | -----------
   4  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |         s13 | ----------- | -----------
   5  | ----------- | ----------- | ----------- | ----------- |          r1 |          r1 | ----------- |          r1 | ----------- | ----------- | ----------- |          r1 |          r1 |          r1
   6  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |         s14 | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   7  | ----------- | ----------- |         s15 | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   8  | ----------- | ----------- | ----------- | ----------- |         r15 |         r15 | ----------- |         r15 | ----------- | ----------- | ----------- |         r15 |         r15 |         r15
   9  | ----------- | ----------- | ----------- | ----------- |         r13 |         r13 | ----------- |         r13 | ----------- | ----------- | ----------- |         r13 |         r13 |         r13
  10  | ----------- | ----------- | ----------- | ----------- |         r14 |         r14 | ----------- |         r14 | ----------- | ----------- | ----------- |         r14 |         r14 |         r14
  11  | ----------- | ----------- | ----------- | ----------- |         r12 |         r12 | ----------- |         r12 | ----------- | ----------- | ----------- |         r12 |         r12 |         r12
  12  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |         s16 | ----------- | -----------
  13  | ----------- | ----------- | ----------- | ----------- |         r11 |         r11 | ----------- |         r11 | ----------- | ----------- | ----------- |         r11 |         r11 |         r11
  14  | ----------- | ----------- | ----------- | ----------- |         r10 |         r10 | ----------- |         r10 | ----------- | ----------- | ----------- |         r10 |         r10 |         r10
  15  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |         s18 | ----------- | ----------- |         s19 | ----------- | -----------
  16  | ----------- | ----------- | ----------- | ----------- |          r9 |          r9 | ----------- |          r9 | ----------- | ----------- | ----------- |          r9 |          r9 |          r9
  17  | ----------- | ----------- | ----------- | ----------- |          r2 |          r2 | ----------- |          r2 | ----------- | ----------- | ----------- |          r2 |          r2 |          r2
  18  | ----------- | ----------- | ----------- | ----------- |          r5 |          r5 |         s21 |          r5 | ----------- | ----------- | ----------- |          r5 |          r5 |          r5
  19  | ----------- | ----------- | ----------- |         s23 | ----------- | ----------- | ----------- | ----------- |          r7 | ----------- | ----------- |          r7 | ----------- | -----------
  20  | ----------- | ----------- | ----------- | ----------- |          r3 |          r3 | ----------- |          r3 | ----------- | ----------- | ----------- |          r3 |          r3 |          r3
  21  | ----------- | ----------- | ----------- | ----------- |          r6 |          r6 | ----------- |          r6 | ----------- | ----------- | ----------- |          r6 |          r6 |          r6
  22  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |         s18 | ----------- | ----------- |         s19 | ----------- | -----------
  23  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |         s25 | ----------- | -----------
  24  | ----------- | ----------- | ----------- | ----------- |          r4 |          r4 | ----------- |          r4 | ----------- | ----------- | ----------- |          r4 |          r4 |          r4
  25  |         s26 | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  26  | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- | ----------- |          r8 | ----------- | ----------- |          r8 | ----------- | -----------


Goto table:
STATE |translationUnit |productionStatementCode |productionStatementArgument |   statement |productionStatementBody |   algorithm
   0  |           1 | ----------- | ----------- | ----------- | ----------- | -----------
   1  | ----------- | ----------- | ----------- |           5 | ----------- | -----------
   2  | ----------- | ----------- | ----------- | ----------- | ----------- |          11
   3  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   4  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   5  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   6  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   7  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   8  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
   9  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  10  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  11  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  12  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  13  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  14  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  15  | ----------- | ----------- | ----------- | ----------- |          17 | -----------
  16  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  17  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  18  | ----------- |          20 | ----------- | ----------- | ----------- | -----------
  19  | ----------- | ----------- |          22 | ----------- | ----------- | -----------
  20  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  21  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  22  | ----------- | ----------- | ----------- | ----------- |          24 | -----------
  23  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  24  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  25  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------
  26  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------


State 0:
    translationUnit' -> * translationUnit

State 1:
    translationUnit -> translationUnit * statement
    translationUnit' -> translationUnit *

State 2:
    statement -> ALGO * algorithm

State 3:
    statement -> TYPE * ID ID

State 4:
    statement -> NAME * ID

State 5:
    translationUnit -> translationUnit statement *

State 6:
    statement -> TOP * CODE

State 7:
    statement -> ID * ASSIGN productionStatementBody

State 8:
    algorithm -> LALR *

State 9:
    algorithm -> SLR *

State 10:
    algorithm -> CLR *

State 11:
    statement -> ALGO algorithm *

State 12:
    statement -> TYPE ID * ID

State 13:
    statement -> NAME ID *

State 14:
    statement -> TOP CODE *

State 15:
    statement -> ID ASSIGN * productionStatementBody

State 16:
    statement -> TYPE ID ID *

State 17:
    statement -> ID ASSIGN productionStatementBody *

State 18:
    productionStatementBody -> SEMICOLON * productionStatementCode

State 19:
    productionStatementBody -> ID * productionStatementArgument productionStatementBody

State 20:
    productionStatementBody -> SEMICOLON productionStatementCode *

State 21:
    productionStatementCode -> CODE *

State 22:
    productionStatementBody -> ID productionStatementArgument * productionStatementBody

State 23:
    productionStatementArgument -> LEFT_PAREN * ID RIGHT_PAREN

State 24:
    productionStatementBody -> ID productionStatementArgument productionStatementBody *

State 25:
    productionStatementArgument -> LEFT_PAREN ID * RIGHT_PAREN

State 26:
    productionStatementArgument -> LEFT_PAREN ID RIGHT_PAREN *
